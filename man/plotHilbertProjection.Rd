% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotHilbertProjection.R
\name{plotHilbertProjection}
\alias{plotHilbertProjection}
\title{A simple helper function to plot projected Hilbert curves}
\usage{
plotHilbertProjection(hc, proj, pch = ".", cex = 2, col = blues9,
  fun = "log10", add = FALSE)
}
\arguments{
\item{hc}{the hilbert index returned by \code{\link{do.hilbert}}}

\item{proj}{the projected reference matrix returned by \code{\link{hilbertProjection}}}

\item{pch}{the point shape (see \code{\link{par}})}

\item{cex}{the value used for character expansion (see \code{\link{par}})}

\item{col}{that color on which the colorscale will be built (see \code{\link{colorRampPalette}})}

\item{fun}{the function used to transform the count data for easier visualization (defaults to \code{\link{log10}})}

\item{add}{if add is TRUE (the default) then the projected Hilbert curve is added to the previous plot}
}
\value{
a matrix with \code{target} columns, corresponding to
the projection of each Hilbert index to \code{target} dimensions
}
\description{
Using a hilbert curve or a subset of it and the set of projection coordinates returned by \code{\link{hilbertProjection}},
plot the number of points matching a particular index as a colored dot chart
}
\details{
Based on the maximum index and the targeted number of dimensions the number of target bins is computed and used
to generate a reference matrix and a reference index. The reference matrix is returned, ordered by the reference index.
}
\examples{
# generate a random matrix
ncols <- 5
mat <- matrix(rnorm(ncols*100),ncol=ncols)
dimnames(mat)[[2]] <- LETTERS[seq(ncols)]
# generate 4 bins with a minimum bin size of 5
horder <- 4
cuts <- make.cut(mat,n=horder+1,count.lim=5)
# Generate the cuts and compute the Hilbert index
cut.mat <- do.cut(mat,cuts,type='fixed')
hc <- do.hilbert(cut.mat,horder)
# project the matrix to 2 dimensions
proj <- hilbertProjection(hc)
plotHilbertProjection(hc,proj)
}
\author{
Yann Abraham
}
